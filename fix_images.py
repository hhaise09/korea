#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–≤—è–∑–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏
"""
import os
import sys
import django
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'korean_cars_shop.settings')
django.setup()

from shop.models import Car, CarImage
from django.core.files import File


def check_and_fix_images():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–≤—è–∑–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º–∏"""
    print("–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–∏
    cars = Car.objects.all()
    print(f"–ù–∞–π–¥–µ–Ω–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π: {cars.count()}")
    
    for car in cars:
        print(f"\n–ê–≤—Ç–æ–º–æ–±–∏–ª—å: {car.brand} {car.model} (ID: {car.id})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        if car.image:
            print(f"  ‚úì –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {car.image.name}")
            if not os.path.exists(car.image.path):
                print(f"  ‚ö† –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {car.image.path}")
        else:
            print(f"  ‚úó –ì–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        additional_images = car.images.all()
        print(f"  –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {additional_images.count()}")
        
        for img in additional_images:
            if img.image:
                print(f"    - {img.image.name} (–≥–ª–∞–≤–Ω–æ–µ: {img.is_main})")
                if not os.path.exists(img.image.path):
                    print(f"    ‚ö† –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {img.image.path}")
            else:
                print(f"    ‚úó –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –±–µ–∑ —Ñ–∞–π–ª–∞")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –Ω–æ –Ω–µ—Ç –∑–∞–ø–∏—Å–∏ –≤ CarImage
        if car.image and not car.images.filter(is_main=True).exists():
            print(f"  üîß –°–æ–∑–¥–∞—é –∑–∞–ø–∏—Å—å CarImage –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...")
            CarImage.objects.create(
                car=car,
                image=car.image,
                is_main=True
            )
            print(f"  ‚úì –ó–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞")


def assign_images_to_cars():
    """–ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Ö ID"""
    print("\n–ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    media_cars_dir = Path('media/cars')
    if not media_cars_dir.exists():
        print("–ü–∞–ø–∫–∞ media/cars –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    image_files = list(media_cars_dir.glob('*.webp'))
    print(f"–ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {len(image_files)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–≤—Ç–æ–º–æ–±–∏–ª–∏ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    cars_without_images = Car.objects.filter(image='')
    print(f"–ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {cars_without_images.count()}")
    
    # –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –ø–æ—Ä—è–¥–∫—É
    for i, car in enumerate(cars_without_images):
        if i < len(image_files):
            image_file = image_files[i]
            print(f"–ü—Ä–∏—Å–≤–∞–∏–≤–∞—é {image_file.name} –∫ {car.brand} {car.model}")
            
            # –°–æ–∑–¥–∞–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –¥–ª—è Django
            relative_path = f'cars/{image_file.name}'
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            car.image = relative_path
            car.save()
            
            # –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å—å –≤ CarImage
            CarImage.objects.create(
                car=car,
                image=relative_path,
                is_main=True
            )
            
            print(f"  ‚úì –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ")
        else:
            print(f"–ù–µ—Ç –±–æ–ª—å—à–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è {car.brand} {car.model}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ===\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    check_and_fix_images()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    response = input("\n–ü—Ä–∏—Å–≤–æ–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è–º –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π? (y/n): ")
    if response.lower() == 'y':
        assign_images_to_cars()
        print("\n–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
        check_and_fix_images()
    
    print("\n=== –ì–æ—Ç–æ–≤–æ ===")


if __name__ == '__main__':
    main() 