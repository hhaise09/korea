#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –¥–µ–ø–ª–æ—é –Ω–∞ Render
"""
import os
import sys
from pathlib import Path

def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –¥–µ–ø–ª–æ—è...")
    
    required_files = [
        'requirements.txt',
        'manage.py',
        'build.sh',
        'gunicorn.conf.py',
        'korean_cars_shop/settings.py',
        'korean_cars_shop/wsgi.py',
        'korean_cars_shop/urls.py',
        'shop/models.py',
        'shop/admin.py',
        'shop/views.py',
        'shop/urls.py',
        'landing/views.py',
        'landing/urls.py',
        'templates/base.html',
        'templates/shop/car_list.html',
        'templates/shop/car_detail.html',
        'static/css/style.css',
    ]
    
    missing_files = []
    for file_path in required_files:
        if not Path(file_path).exists():
            missing_files.append(file_path)
        else:
            print(f"  ‚úÖ {file_path}")
    
    if missing_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:")
        for file in missing_files:
            print(f"  - {file}")
        return False
    else:
        print("  ‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ")
        return True

def check_export_data():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    export_dir = Path('export_data')
    if not export_dir.exists():
        print("  ‚ùå –ü–∞–ø–∫–∞ export_data –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    cars_data_file = export_dir / 'cars_data.json'
    if not cars_data_file.exists():
        print("  ‚ùå –§–∞–π–ª cars_data.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    images_dir = export_dir / 'images'
    if not images_dir.exists():
        print("  ‚ùå –ü–∞–ø–∫–∞ images –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return False
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    image_files = list(images_dir.glob('*.jpg'))
    print(f"  ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(image_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
    file_size = cars_data_file.stat().st_size
    print(f"  ‚úÖ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ –¥–∞–Ω–Ω—ã—Ö: {file_size} –±–∞–π—Ç")
    
    return True

def check_settings():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django"""
    print("\n‚öôÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ Django...")
    
    try:
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'korean_cars_shop.settings')
        import django
        django.setup()
        
        from django.conf import settings
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        checks = [
            ('DEBUG', settings.DEBUG),
            ('SECRET_KEY', bool(settings.SECRET_KEY)),
            ('ALLOWED_HOSTS', bool(settings.ALLOWED_HOSTS)),
            ('STATIC_URL', settings.STATIC_URL),
            ('MEDIA_URL', settings.MEDIA_URL),
            ('DATABASES', bool(settings.DATABASES)),
        ]
        
        for setting_name, value in checks:
            if value:
                print(f"  ‚úÖ {setting_name}: OK")
            else:
                print(f"  ‚ùå {setting_name}: –ù–ï –ù–ê–°–¢–†–û–ï–ù")
                return False
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return False

def check_models():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–æ–¥–µ–ª–∏ Django"""
    print("\nüóÑÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–µ–π...")
    
    try:
        from shop.models import Car, CarImage, Order
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
        cars_count = Car.objects.count()
        images_count = CarImage.objects.count()
        orders_count = Order.objects.count()
        
        print(f"  ‚úÖ –ê–≤—Ç–æ–º–æ–±–∏–ª–µ–π –≤ –ë–î: {cars_count}")
        print(f"  ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –ë–î: {images_count}")
        print(f"  ‚úÖ –ó–∞–∫–∞–∑–æ–≤ –≤ –ë–î: {orders_count}")
        
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏"""
    print("üöÄ –ü–†–û–í–ï–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–ò –ö –î–ï–ü–õ–û–Æ –ù–ê RENDER")
    print("=" * 50)
    
    checks = [
        ("–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞", check_files),
        ("–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", check_export_data),
        ("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Django", check_settings),
        ("–ú–æ–¥–µ–ª–∏ –∏ –¥–∞–Ω–Ω—ã–µ", check_models),
    ]
    
    all_passed = True
    
    for check_name, check_func in checks:
        try:
            if not check_func():
                all_passed = False
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ –ø—Ä–æ–≤–µ—Ä–∫–µ {check_name}: {e}")
            all_passed = False
    
    print("\n" + "=" * 50)
    if all_passed:
        print("üéâ –í–°–ï –ü–†–û–í–ï–†–ö–ò –ü–†–û–ô–î–ï–ù–´!")
        print("‚úÖ –ü–†–û–ï–ö–¢ –ì–û–¢–û–í –ö –î–ï–ü–õ–û–Æ –ù–ê RENDER!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ó–∞–∫–æ–º–º–∏—Ç—å—Ç–µ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ git")
        print("2. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ GitHub")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ Web Service –Ω–∞ Render")
        print("4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("5. –î–æ–∂–¥–∏—Ç–µ—Å—å —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–µ–ø–ª–æ—è")
    else:
        print("‚ùå –ù–ï–ö–û–¢–û–†–´–ï –ü–†–û–í–ï–†–ö–ò –ù–ï –ü–†–û–ô–î–ï–ù–´")
        print("–ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º")
    
    print("\nüìñ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –≤ —Ñ–∞–π–ª–µ DEPLOY_READY.md")

if __name__ == '__main__':
    main() 